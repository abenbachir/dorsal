
1) Use ARRAY_SIZE(ftrace_vearly_params) instead of sizeof
Also, have the declarations in upside-down x-mas tree order. (Declare,
size, p then i) where smallest line length is last.

2) static char tmp_cmdline[COMMAND_LINE_SIZE] __initdata;
If you define the above as __initdata, just keep it out of the function
itself.

3) Pull __start_mcount_loc[]; out of ftrace_init, and just 
have them declared once (outside of any function).

5) Never include arch specific code in generic code.

6) native_calibrate_cpu() only exists in x86. You just broke the build for
all other architectures.

4)The above two functions can be consolidated into one, and just pass the
ftrace_vearly_(notrace/filter)_buf and
ftrace_vearly_(notrace/filter)_list, vearly_(notrace/filter)_count to
it as parameters. Don't duplicate the logic.

7) CONFIG_VERY_EARLY_FUNCTION_TRACER
depends CONFIG_FUNCTION_TRACER
depends CONFIG_HAVE_VERY_EARLY_FTRACE


2) make VEARLY_BUF_SIZE configurable
Perhaps defined as a config, or even
modified via kernel command line. The latter would require a way to
allocate it. A compile time config option should be added at least.

9) make VEARLY_FILTER_SIZE configurable, and perhaps even disabled if chosen to be so.


--------------------------------- DONE --------------------------
10) Don't create new trace_function_timestamp  Use trace_function() instead. Perhaps
enable ftrace_exports to add a hook to update the timestamp.

Then you need to add a handler into the ring buffer code to update the
timestamp for you. More below.

add a hook into ftrace_exports() and then add a handler into the ring
buffer that allows you to update the timestamp.



