From 55f8e3a280b823c720df399f848c3b654f2cc5a4 Mon Sep 17 00:00:00 2001
From: Abderrahmane Benbachir <abderrahmane.benbachir@polymtl.ca>
Date: Fri, 14 Jul 2017 12:37:07 -0400
Subject: [PATCH] KVM: x86: Fix vmcall exit multiplication

This optimization make a single vmcall exit fast and reduce frequency of exits.

Signed-off-by: Abderrahmane Benbachir <abderrahmane.benbachir@polymtl.ca>
---
 arch/x86/kvm/vmx.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index ca5d2b93385c..8ddd8c260dcc 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -8033,7 +8033,19 @@ static bool nested_vmx_exit_handled(struct kvm_vcpu *vcpu)
 		return nested_cpu_has2(vmcs12, SECONDARY_EXEC_RDSEED);
 	case EXIT_REASON_RDTSC: case EXIT_REASON_RDTSCP:
 		return nested_cpu_has(vmcs12, CPU_BASED_RDTSC_EXITING);
-	case EXIT_REASON_VMCALL: case EXIT_REASON_VMCLEAR:
+	case EXIT_REASON_VMCALL:
+		/*
+		 * Exit multiplication : This fix prevent VMCALL from being
+		 * forwarded to L1, because a single L2 exit can cause 40-50
+		 * L1 exits!, this optimization make a single vmcall exit
+		 * fast and reduce frequency of exits.
+		 * Only vmcall with specific hypercall number range will
+		 * benifit from this optimization.
+		 */
+		if (kvm_register_read(vcpu, VCPU_REGS_RAX) < 0x10000)
+			return false;
+		return true;
+	case EXIT_REASON_VMCLEAR:
 	case EXIT_REASON_VMLAUNCH: case EXIT_REASON_VMPTRLD:
 	case EXIT_REASON_VMPTRST: case EXIT_REASON_VMREAD:
 	case EXIT_REASON_VMRESUME: case EXIT_REASON_VMWRITE:
-- 
2.11.0

